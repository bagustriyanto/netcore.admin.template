// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SarayaAdmin.Entity.Model;

namespace SarayaAdmin.Entity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SarayaAdmin.Entity.Model.Credentials", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedHost")
                        .HasColumnName("created_host")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedHost")
                        .HasColumnName("modified_host")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(255);

                    b.Property<bool?>("PublicUser")
                        .HasColumnName("public_user");

                    b.Property<string>("Salt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("salt")
                        .HasDefaultValueSql("NULL::character varying")
                        .HasMaxLength(255);

                    b.Property<bool>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.Property<string>("VerificationCode")
                        .HasColumnName("verification_code")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("credentials");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = "System",
                            CreatedOn = new DateTime(2019, 12, 5, 15, 53, 57, 418, DateTimeKind.Local).AddTicks(4987),
                            Email = "admin@admin.com",
                            Password = "CiIzQaA1vmGP2Pkrcp2CDVelxx2w4Nw3qgvkgwcrf1c=",
                            Salt = "Ef+5WLoTHpQ3nGH+uDko+w==",
                            Status = true,
                            Username = "administrator"
                        });
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("Parent")
                        .HasColumnName("parent");

                    b.Property<bool?>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Parent");

                    b.ToTable("menu");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Status = true,
                            Title = "Master Data",
                            Url = "#"
                        },
                        new
                        {
                            Id = 2L,
                            Parent = 1L,
                            Status = true,
                            Title = "User",
                            Url = "/master/user"
                        },
                        new
                        {
                            Id = 3L,
                            Parent = 1L,
                            Status = true,
                            Title = "Menu",
                            Url = "/master/menu"
                        },
                        new
                        {
                            Id = 4L,
                            Parent = 1L,
                            Status = true,
                            Title = "Role",
                            Url = "/master/role"
                        },
                        new
                        {
                            Id = 5L,
                            Parent = 1L,
                            Status = true,
                            Title = "User Role Map",
                            Url = "/master/user-role-map"
                        },
                        new
                        {
                            Id = 6L,
                            Parent = 1L,
                            Status = true,
                            Title = "Menu Role Map",
                            Url = "/master/menu-role-map"
                        });
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.MenuRoleMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("MenuId")
                        .HasColumnName("menu_id");

                    b.Property<long>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("menu_role_map");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MenuId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            MenuId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            MenuId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            MenuId = 4L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            MenuId = 5L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            MenuId = 6L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.Parameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasMaxLength(5);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedHost")
                        .HasColumnName("created_host")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedHost")
                        .HasColumnName("modified_host")
                        .HasColumnType("character varying");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("parameter");
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "System Admin",
                            Status = true
                        });
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.RoleMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CredentialId")
                        .HasColumnName("credential_id");

                    b.Property<long>("RoleId")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("CredentialId");

                    b.HasIndex("RoleId");

                    b.ToTable("role_map");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CredentialId = 1L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedHost")
                        .HasColumnName("created_host")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<long>("CredentialId")
                        .HasColumnName("credential_id");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modified_by")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedHost")
                        .HasColumnName("modified_host")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.HasIndex("CredentialId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.Menu", b =>
                {
                    b.HasOne("SarayaAdmin.Entity.Model.Menu", "ParentNavigation")
                        .WithMany("InverseParentNavigation")
                        .HasForeignKey("Parent")
                        .HasConstraintName("fk_parent");
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.MenuRoleMap", b =>
                {
                    b.HasOne("SarayaAdmin.Entity.Model.Menu", "Menu")
                        .WithMany("MenuRoleMap")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("menu_role_map_fk");

                    b.HasOne("SarayaAdmin.Entity.Model.Role", "Role")
                        .WithMany("MenuRoleMap")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("menu_role_map_fk_1");
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.RoleMap", b =>
                {
                    b.HasOne("SarayaAdmin.Entity.Model.Credentials", "Credential")
                        .WithMany("RoleMap")
                        .HasForeignKey("CredentialId")
                        .HasConstraintName("role_map_credentials_fk");

                    b.HasOne("SarayaAdmin.Entity.Model.Role", "Role")
                        .WithMany("RoleMap")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("role_map_role_fk");
                });

            modelBuilder.Entity("SarayaAdmin.Entity.Model.User", b =>
                {
                    b.HasOne("SarayaAdmin.Entity.Model.Credentials", "Credential")
                        .WithMany("User")
                        .HasForeignKey("CredentialId")
                        .HasConstraintName("user_fk");
                });
#pragma warning restore 612, 618
        }
    }
}
